services:
  # prefilter_api:
  #   image: mlkod/lua-engine:prefilter_api
  #   build:
  #     context: .
  #     dockerfile: LuaEngine.Prefilter/Dockerfile
  #   ports:
  #     - "8080:8080"
  #     - "8081:8081"
  #   container_name: prefilter_api
  #   depends_on:
  #     - scripts_api
  #     - orchestrator_api
  # orchestrator_api:
  #   image: mlkod/lua-engine:orchestrator_api
  #   build:
  #     context: ../LuaEngine.LuaOrchestrator
  #     dockerfile: LuaEngine.LuaOrchestrator/Dockerfile
  #   ports:
  #     - "8084:8084"
  #     - "8085:8085"
  #   container_name: orchestrator_api
  #   depends_on:
  #     - rabbitmq
  # agent_api:
  #   image: mlkod/lua-engine:agent_api
  #   build:
  #     context: ../LuaEngine.LuaAgent
  #     dockerfile: LuaEngine.LuaAgent/Dockerfile
  #   ports:
  #     - "8086:8086"
  #   container_name: agent_api
  #   depends_on:
  #     - orchestrator_api
  scripts_api:
    image: mlkod/lua-engine:scripts_api
    build:
      context: ../LuaEngine.Scripts
      dockerfile: LuaEngine.Scripts/Dockerfile
    ports:
      - "8082:8082"
      - "8083:8083"
    container_name: scripts_api
    restart: "on-failure"
    depends_on:
      scripts_db:
        condition: "service_started"
      redis:
        condition: "service_started"
      graylog:
        condition: "service_started"
    volumes:
      - ../LuaEngine.Scripts/LuaEngine.Scripts.Models/bin/Debug:/root/.nuget/packages
  scripts_db:
    image: mlkod/lua-engine:scripts_db
    build:
      context: ../db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=scripts
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pg1248
    volumes: 
      - db_data:/var/lib/postgresql/data
    container_name: scripts_db
  # rabbitmq:
  #   image: mlkod/lua-engine:rabbitmq
  #   build:
  #     context: ../rabbitmq
  #     dockerfile: Dockerfile
  #   hostname: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rmuser
  #     - RABBITMQ_DEFAULT_PASS=rmpassword
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq/data
  #   container_name: rabbitmq
  redis:
    image: mlkod/lua-engine:redis
    build:
      context: ../redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    restart: always
    container_name: redis
  mongodb:
    image: mlkod/lua-engine:mongo_db
    build:
      context: ../mongodb
      dockerfile: Dockerfile
    restart: "on-failure"
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"  
  datanode:
    image: mlkod/lua-engine:datanode
    build:
      context: ../datanode
      dockerfile: Dockerfile
    hostname: "datanode"
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      GRAYLOG_DATANODE_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET:?Please configure GRAYLOG_PASSWORD_SECRET in the .env file}"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    restart: "on-failure"
  graylog:
    hostname: "graylog"
    image: mlkod/lua-engine:graylog
    build:
      context: ../graylog
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: "service_started"
      datanode:
        condition: "service_started"
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
    restart: "on-failure"

volumes:
  db_data:
  rabbitmq_data:
  redis_data:
  mongodb_data:
  mongodb_config:
  graylog-datanode:
  graylog_data:
